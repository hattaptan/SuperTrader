// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperTrader.DataAccess.Context;

#nullable disable

namespace SuperTrader.DataAccess.Migrations
{
    [DbContext(typeof(SuperTraderContext))]
    [Migration("20221019200546_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SuperTrader.Entity.Model.Buy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("shareId")
                        .HasColumnType("integer");

                    b.Property<int>("traderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("shareId")
                        .IsUnique();

                    b.HasIndex("traderId");

                    b.ToTable("Buy");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Portfolio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("buyId")
                        .HasColumnType("integer");

                    b.Property<int>("sellId")
                        .HasColumnType("integer");

                    b.Property<int>("traderId")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("buyId")
                        .IsUnique();

                    b.HasIndex("sellId")
                        .IsUnique();

                    b.HasIndex("traderId")
                        .IsUnique();

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Sell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("shareId")
                        .HasColumnType("integer");

                    b.Property<int>("traderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("shareId")
                        .IsUnique();

                    b.HasIndex("traderId")
                        .IsUnique();

                    b.ToTable("Sell");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("percent")
                        .HasColumnType("numeric");

                    b.Property<int>("price")
                        .HasColumnType("integer");

                    b.Property<string>("shareCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("shareName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Share");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Traders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("id");

                    b.ToTable("Traders");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Buy", b =>
                {
                    b.HasOne("SuperTrader.Entity.Model.Share", "share")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Buy", "shareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperTrader.Entity.Model.Traders", "trader")
                        .WithMany()
                        .HasForeignKey("traderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("share");

                    b.Navigation("trader");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Portfolio", b =>
                {
                    b.HasOne("SuperTrader.Entity.Model.Buy", "buy")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Portfolio", "buyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperTrader.Entity.Model.Sell", "sell")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Portfolio", "sellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperTrader.Entity.Model.Traders", "trader")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Portfolio", "traderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("buy");

                    b.Navigation("sell");

                    b.Navigation("trader");
                });

            modelBuilder.Entity("SuperTrader.Entity.Model.Sell", b =>
                {
                    b.HasOne("SuperTrader.Entity.Model.Share", "share")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Sell", "shareId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("SuperTrader.Entity.Model.Traders", "trader")
                        .WithOne()
                        .HasForeignKey("SuperTrader.Entity.Model.Sell", "traderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("share");

                    b.Navigation("trader");
                });
#pragma warning restore 612, 618
        }
    }
}
